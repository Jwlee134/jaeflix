{"version":3,"sources":["api.js","Components/Loader.js","Components/Message.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Section.js","Components/Poster.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/BasicInfo.js","Components/Credits.js","Components/Videos.js","Components/Detail.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","tvApi","get","id","append_to_response","term","query","moviesApi","Container","styled","div","Loader","Text","span","Message","text","ImgContainer","SCarousel","Carousel","Caption","Img","img","Cover","HomePresenter","nowPlaying","error","loading","Helmet","interval","length","map","movie","index","Item","to","src","poster_path","backdrop_path","HomeContainer","state","data","results","this","setState","React","Component","Title","StyledSlider","Slider","Section","title","children","isPeople","settings","infinite","swipeToSlide","centerPadding","slidesToShow","speed","slidesToScroll","responsive","breakpoint","props","bgUrl","Star","Rating","Detail","Year","Poster","imageUrl","rating","year","isMovie","isContents","substring","MoviePresenter","topRated","upcoming","popular","release_date","vote_average","MovieContainer","TVPresenter","airingToday","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","target","preventDefault","searchByTerm","a","SHeader","header","List","ul","li","current","SLink","Link","withRouter","pathname","location","Ul","Li","Overview","genres","runtime","overview","date","genre","includes","NoCredits","Credits","casts","crews","crew","department","profile_path","cast","character","VideoContainer","Name","NoVideos","Videos","videos","video","href","key","alt","p","BasicData","Data","ItemContainer","selected","Content","Divider","imgUrl","originTitle","Backdrop","bgImg","result","recommends","original_title","original_name","episode_run_time","recommend","DetailContainer","match","push","history","parsedId","parseInt","isNaN","prevProps","render","componentDidMount","Router","path","exact","component","Home","Movie","TV","Search","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.32013cd8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"8acfa0aece876055b4f26b6c1a000307\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  recommends: (id) => api.get(`tv/${id}/recommendations`),\r\n  credits: (id) => api.get(`tv/${id}/credits`),\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  recommends: (id) => api.get(`movie/${id}/recommendations`),\r\n  credits: (id) => api.get(`movie/${id}/credits`),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin: -25px 0 0 -25px;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #fff;\r\n  animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => <Container></Container>;\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n  color: #95a5a6;\r\n`;\r\n\r\nconst Message = ({ text }) => (\r\n  <Container>\r\n    <Text>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Message from \"Components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst SCarousel = styled(Carousel.Caption)`\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  grid-template-rows: 15% 70% 15%;\r\n  height: calc(100vh - 80px);\r\n  padding: 0;\r\n  align-items: center;\r\n  h1 {\r\n    font-size: 40px;\r\n    font-weight: 600;\r\n    line-height: 1.3;\r\n  }\r\n  h2 {\r\n    font-size: 20px;\r\n    line-height: 1.3;\r\n  }\r\n  @media screen and (max-width: 920px) {\r\n    h1 {\r\n      font-size: 35px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 805px) {\r\n    h1 {\r\n      font-size: 30px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 690px) {\r\n    h1 {\r\n      font-size: 25px;\r\n    }\r\n    h2 {\r\n      font-size: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n  @media screen and (max-width: 450px) {\r\n    width: 100%;\r\n    height: inherit;\r\n  }\r\n`;\r\n\r\nconst Cover = styled.img`\r\n  width: 100%;\r\n  height: 99vh;\r\n  object-fit: cover;\r\n  filter: blur(3px);\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>홈 | Jaeflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message text=\"페이지를 불러올 수 없습니다.\" />\r\n    ) : (\r\n      <Container>\r\n        <Carousel interval={null}>\r\n          {nowPlaying &&\r\n            nowPlaying.length > 0 &&\r\n            nowPlaying.map((movie, index) => (\r\n              <Carousel.Item key={index}>\r\n                <SCarousel>\r\n                  <h1>Jaeflix 추천 영화</h1>\r\n                  <ImgContainer>\r\n                    <Link to={`/movie/${movie.id}`}>\r\n                      <Img\r\n                        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                      />\r\n                    </Link>\r\n                  </ImgContainer>\r\n                  <h2>클릭하여 상세 페이지로 이동합니다.</h2>\r\n                </SCarousel>\r\n                <Cover\r\n                  src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n                />\r\n              </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      this.setState({\r\n        nowPlaying,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"페이지 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter nowPlaying={nowPlaying} error={error} loading={loading} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Container = styled.div`\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n  @media screen and (max-width: 550px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  margin: 25px;\r\n  .slick-slide {\r\n    padding: 0px 10px;\r\n  }\r\n  .slick-track {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst Section = ({ title, children, isPeople = false }) => {\r\n  const settings = {\r\n    infinite: false,\r\n    swipeToSlide: true,\r\n    centerPadding: \"60px\",\r\n    slidesToShow: isPeople ? 7 : 9,\r\n    speed: 500,\r\n    slidesToScroll: 5,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1800,\r\n        settings: {\r\n          slidesToShow: isPeople ? 6 : 8,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1600,\r\n        settings: {\r\n          slidesToShow: isPeople ? 5 : 7,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1300,\r\n        settings: {\r\n          slidesToShow: isPeople ? 4 : 6,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1150,\r\n        settings: {\r\n          slidesToShow: isPeople ? 3 : 5,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1000,\r\n        settings: {\r\n          slidesToShow: isPeople ? 4 : 5,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 900,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 4,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 700,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 550,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 400,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <StyledSlider {...settings}>{children}</StyledSlider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  isPeople: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Img = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  width: 100%;\r\n  height: 270px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 5px;\r\n  transition: opacity 0.1s linear;\r\n  @media screen and (max-width: 1000px) {\r\n    height: 250px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    height: 240px;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    height: 200px;\r\n  }\r\n  @media screen and (max-width: 550px) {\r\n    height: 240px;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    height: 210px;\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    height: 140px;\r\n  }\r\n`;\r\n\r\nconst Text = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Star = styled.div`\r\n  margin-bottom: 3px;\r\n  margin-right: 3px;\r\n`;\r\n\r\nconst Rating = styled.div`\r\n  position: absolute;\r\n  bottom: 4px;\r\n  right: 7px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n  display: flex;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  margin-bottom: 10px;\r\n  &:hover {\r\n    ${Detail} {\r\n      opacity: 1;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  padding-bottom: 5px;\r\n  line-height: 1.2;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({\r\n  id,\r\n  imageUrl,\r\n  title,\r\n  rating,\r\n  year,\r\n  isMovie = false,\r\n  isPeople = false,\r\n}) =>\r\n  isPeople ? (\r\n    <Container>\r\n      <ImgContainer>\r\n        <Img\r\n          isContents={false}\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : \"/noImg.png\"\r\n          }\r\n        />\r\n      </ImgContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  ) : (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <ImgContainer>\r\n          <Img\r\n            isContents={true}\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : \"/noImg.png\"\r\n            }\r\n          />\r\n          <Detail>상세 보기</Detail>\r\n          <Rating>\r\n            <Star>★</Star> <Text>{rating}/10</Text>\r\n          </Rating>\r\n        </ImgContainer>\r\n        <Title>\r\n          {title.length > 18 ? `${title.substring(0, 17)}...` : title}\r\n        </Title>\r\n        <Year>{year ? year.substring(0, 4) : \"연도 정보 없음\"}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n\r\nPoster.propTypes = {\r\n  imageUrl: PropTypes.string,\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst MoviePresenter = ({ topRated, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>영화 | Jaeflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                year={movie.release_date}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"상영 예정\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                year={movie.release_date}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"최고 평점\">\r\n            {topRated.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                year={movie.release_date}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nMoviePresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default MoviePresenter;\r\n","import MovieContainer from \"./MovieContainer\";\r\n\r\nexport default MovieContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport MoviePresenter from \"./MoviePresenter\";\r\n\r\nclass MovieContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await moviesApi.topRated();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        topRated,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"페이지 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <MoviePresenter\r\n        topRated={topRated}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Jaeflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"현재 방영중\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"최고 평점\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    airingToday: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      this.setState({\r\n        topRated,\r\n        airingToday,\r\n        popular,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"페이지 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, airingToday, popular, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0px 20px;\r\n  height: 100%;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 30px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>검색 | Jaeflix</title>\r\n    </Helmet>\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"영화 또는 TV 검색...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        ></Input>\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"영화 검색 결과\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV 검색 결과\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} />}\r\n          {tvResults &&\r\n            movieResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Message text={\"일치하는 결과가 없습니다.\"} />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  updateTerm = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  searchByTerm = async (term) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(term);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(term);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"페이지 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = ({ location: { pathname } }) => (\r\n  <SHeader>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">홈</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/movie\"}>\r\n        <SLink to=\"/movie\">영화</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">검색</SLink>\r\n      </Item>\r\n    </List>\r\n  </SHeader>\r\n);\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Ul = styled.ul`\r\n  border-left: 3px solid rgba(255, 255, 255, 0.3);\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst Li = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  margin-right: 10px;\r\n  opacity: 0.6;\r\n`;\r\nconst Overview = styled.div`\r\n  margin-top: 15px;\r\n  line-height: 1.7;\r\n  opacity: 0.8;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst BasicInfo = ({\r\n  genres,\r\n  runtime,\r\n  overview,\r\n  date,\r\n  rating,\r\n  location: { pathname },\r\n}) => (\r\n  <Container>\r\n    <Ul>\r\n      <Li>\r\n        <Title>시간</Title>\r\n        <span>{runtime ? `${runtime}분` : \"등록되지 않음\"}</span>\r\n      </Li>\r\n      <Li>\r\n        <Title>장르</Title>\r\n        <span>\r\n          {genres.map((genre, index) =>\r\n            index === genres.length - 1 ? genre.name : `${genre.name} / `\r\n          )}\r\n        </span>\r\n      </Li>\r\n      <Li>\r\n        <Title>{pathname.includes(\"movie\") ? \"개봉\" : \"방영\"}</Title>\r\n        <span>{date ? date : \"등록되지 않음\"}</span>\r\n      </Li>\r\n      <Li>\r\n        <Title>평점</Title>\r\n        <span>{rating ? rating : \"등록되지 않음\"}</span>\r\n      </Li>\r\n    </Ul>\r\n    <Overview>{overview ? overview : \"등록된 소개글이 없습니다.\"}</Overview>\r\n  </Container>\r\n);\r\n\r\nBasicInfo.propTypes = {\r\n  genres: PropTypes.array,\r\n  runtime: PropTypes.number,\r\n  overview: PropTypes.string,\r\n  date: PropTypes.string,\r\n  rating: PropTypes.number,\r\n};\r\n\r\nexport default withRouter(BasicInfo);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"./Section\";\r\nimport Poster from \"./Poster\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst NoCredits = styled.div`\r\n  font-size: 14px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Credits = ({ casts, crews }) => (\r\n  <Container>\r\n    {crews && casts && (\r\n      <>\r\n        <Section title=\"제작\" isPeople={true}>\r\n          {crews &&\r\n            crews.length > 0 &&\r\n            crews.map((crew) => (\r\n              <Poster\r\n                key={crew.id}\r\n                id={crew.id}\r\n                title={crew.name}\r\n                year={crew.department}\r\n                isPeople={true}\r\n                imageUrl={crew.profile_path}\r\n              />\r\n            ))}\r\n        </Section>\r\n        <Section title=\"배우\" isPeople={true}>\r\n          {casts &&\r\n            casts.length > 0 &&\r\n            casts.map((cast) => (\r\n              <Poster\r\n                key={cast.id}\r\n                id={cast.id}\r\n                title={cast.name}\r\n                year={cast.character}\r\n                isPeople={true}\r\n                imageUrl={cast.profile_path}\r\n              />\r\n            ))}\r\n        </Section>\r\n      </>\r\n    )}\r\n    {!crews && !casts && <NoCredits>등록된 정보가 없습니다.</NoCredits>}\r\n  </Container>\r\n);\r\n\r\nCredits.propTypes = {\r\n  casts: PropTypes.array,\r\n  crews: PropTypes.array,\r\n};\r\n\r\nexport default Credits;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 30px;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  margin: 15px 0px;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.3;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst NoVideos = styled.div`\r\n  font-size: 14px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Videos = ({ videos }) => (\r\n  <Container>\r\n    {videos && videos.length > 0 ? (\r\n      videos.map((video, index) => (\r\n        <VideoContainer key={index}>\r\n          <a\r\n            href={`https://www.youtube.com/watch?v=${video.key}`}\r\n            target=\"blank\"\r\n          >\r\n            <Img\r\n              alt={video.id}\r\n              src={`https://img.youtube.com/vi/${video.key}/0.jpg`}\r\n            />\r\n            <Name>{video.name}</Name>\r\n          </a>\r\n        </VideoContainer>\r\n      ))\r\n    ) : (\r\n      <NoVideos>등록된 동영상이 없습니다.</NoVideos>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nVideos.propTypes = {\r\n  videos: PropTypes.array,\r\n};\r\n\r\nexport default Videos;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport Credits from \"./Credits\";\r\nimport Videos from \"./Videos\";\r\n\r\nconst Cover = styled.img`\r\n  width: 100%;\r\n  max-height: 100%;\r\n  z-index: 1;\r\n  border-radius: 5px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 40px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  opacity: 0.8;\r\n  line-height: 1.8;\r\n  width: 90%;\r\n`;\r\n\r\nconst BasicData = styled.span`\r\n  opacity: 0.8;\r\n  font-size: 15px;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 60vw;\r\n  max-height: calc(100vh - 100px);\r\n  margin-left: 40px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 70%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  padding: 20px;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  font-size: 20px;\r\n  font-weight: 300;\r\n  padding: 10px;\r\n  background-color: ${(props) =>\r\n    props.selected ? \"rgba(0, 0, 0, 0.4)\" : \"none\"};\r\n  border-top-left-radius: ${(props) => (props.selected ? \"10px\" : \"none\")};\r\n  border-top-right-radius: ${(props) => (props.selected ? \"10px\" : \"none\")};\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 8fr;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: calc(100vh - 100px);\r\n  margin-bottom: 50px;\r\n  @media screen and (max-width: 1000px) {\r\n    grid-template-columns: none;\r\n    grid-template-rows: 30vh 75vh;\r\n    height: auto;\r\n    ${Cover} {\r\n      width: auto;\r\n    }\r\n    ${Data} {\r\n      justify-self: center;\r\n      text-align: center;\r\n      margin-left: 0;\r\n      width: 100%;\r\n      max-width: 85vw;\r\n      margin: 20px 0px;\r\n    }\r\n    ${Overview} {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n    ${ItemContainer} {\r\n      text-align: left;\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    ${Title} {\r\n      font-size: 30px;\r\n    }\r\n    ${Data} {\r\n      max-width: 75vw;\r\n    }\r\n    ${Li} {\r\n      font-size: 17px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    ${Overview} {\r\n      font-size: 10px;\r\n      width: 100%;\r\n    }\r\n    ${Li} {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0px 10px;\r\n  opacity: 0.8;\r\n  font-weight: 200;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Detail = ({\r\n  id,\r\n  imgUrl,\r\n  title,\r\n  originTitle,\r\n  date,\r\n  runtime,\r\n  genres,\r\n  overview,\r\n  rating,\r\n  casts,\r\n  crews,\r\n  videos,\r\n  location: { pathname },\r\n}) => {\r\n  const isMovie = pathname.includes(\"/movie/\");\r\n  return (\r\n    <Content>\r\n      <Cover\r\n        src={imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : \"/noImg.png\"}\r\n      />\r\n      <Data>\r\n        <Title>{title}</Title>\r\n        <BasicData>\r\n          {pathname.includes(\"/movie/\") ? \"영화\" : \"TV 프로그램\"}\r\n        </BasicData>\r\n        <Divider>|</Divider>\r\n        <BasicData>{originTitle}</BasicData>\r\n        <Divider>|</Divider>\r\n        <BasicData>{date ? date.substring(0, 4) : \"연도 정보 없음\"}</BasicData>\r\n        <Ul>\r\n          <Li\r\n            selected={pathname === `/movie/${id}` || pathname === `/tv/${id}`}\r\n          >\r\n            <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>기본 정보</Link>\r\n          </Li>\r\n          <Li selected={pathname.includes(\"credits\")}>\r\n            <Link to={isMovie ? `/movie/${id}/credits` : `/tv/${id}/credits`}>\r\n              감독/출연\r\n            </Link>\r\n          </Li>\r\n          <Li selected={pathname.includes(\"videos\")}>\r\n            <Link to={isMovie ? `/movie/${id}/videos` : `/tv/${id}/videos`}>\r\n              동영상\r\n            </Link>\r\n          </Li>\r\n        </Ul>\r\n        <ItemContainer>\r\n          {pathname === `/movie/${id}` || pathname === `/tv/${id}` ? (\r\n            <BasicInfo\r\n              genres={genres}\r\n              runtime={runtime}\r\n              overview={overview}\r\n              date={date}\r\n              rating={rating}\r\n            />\r\n          ) : pathname.includes(\"credits\") ? (\r\n            <Credits casts={casts} crews={crews} />\r\n          ) : pathname.includes(\"videos\") ? (\r\n            <Videos videos={videos} />\r\n          ) : null}\r\n        </ItemContainer>\r\n      </Data>\r\n    </Content>\r\n  );\r\n};\r\n\r\nDetail.propTypes = {\r\n  id: PropTypes.number,\r\n  imgUrl: PropTypes.string,\r\n  title: PropTypes.string,\r\n  originTitle: PropTypes.string,\r\n  date: PropTypes.string,\r\n  runtime: PropTypes.number,\r\n  genres: PropTypes.array,\r\n  overview: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  casts: PropTypes.array,\r\n  crews: PropTypes.array,\r\n};\r\n\r\nexport default withRouter(Detail);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\nimport Section from \"Components/Section\";\r\nimport Poster from \"Components/Poster\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Detail from \"Components/Detail\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 30px;\r\n  padding-top: 100px;\r\n  @media screen and (max-width: 400px) {\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n  }\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst DetailPresenter = ({\r\n  result,\r\n  recommends,\r\n  error,\r\n  loading,\r\n  casts,\r\n  crews,\r\n  location: { pathname },\r\n}) => {\r\n  const isMovie = pathname.includes(\"/movie/\");\r\n  return loading ? (\r\n    <>\r\n      <Loader />\r\n      <Helmet>\r\n        <title>로딩중 | Jaeflix</title>\r\n      </Helmet>\r\n    </>\r\n  ) : error ? (\r\n    <Message text=\"결과가 없습니다.\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.title ? result.title : result.name} | Jaeflix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Detail\r\n        id={result.id}\r\n        imgUrl={result.poster_path}\r\n        title={isMovie ? result.title : result.name}\r\n        originTitle={isMovie ? result.original_title : result.original_name}\r\n        date={isMovie ? result.release_date : result.first_air_date}\r\n        runtime={isMovie ? result.runtime : result.episode_run_time}\r\n        genres={result.genres}\r\n        overview={result.overview}\r\n        rating={result.vote_average}\r\n        casts={casts}\r\n        crews={crews}\r\n        videos={result.videos.results}\r\n      />\r\n      {recommends &&\r\n        recommends.length > 0 &&\r\n        (isMovie ? (\r\n          <Section title=\"관련 영화 추천\">\r\n            {recommends.map((recommend) => (\r\n              <Poster\r\n                key={recommend.id}\r\n                id={recommend.id}\r\n                imageUrl={recommend.poster_path}\r\n                title={recommend.title}\r\n                year={recommend.release_date}\r\n                rating={recommend.vote_average}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        ) : (\r\n          <Section title=\"관련 TV 프로그램 추천\">\r\n            {recommends.map((recommend) => (\r\n              <Poster\r\n                key={recommend.id}\r\n                id={recommend.id}\r\n                imageUrl={recommend.poster_path}\r\n                title={recommend.name}\r\n                rating={recommend.vote_average}\r\n                year={recommend.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  recommends: PropTypes.array,\r\n  casts: PropTypes.array,\r\n  crews: PropTypes.array,\r\n  videos: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withRouter(DetailPresenter);\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nclass DetailContainer extends React.Component {\r\n  state = {\r\n    result: null,\r\n    recommends: null,\r\n    casts: null,\r\n    crews: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n      location: { pathname },\r\n    } = this.props;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    const isMovie = pathname.includes(\"/movie/\");\r\n    try {\r\n      if (isMovie) {\r\n        const { data: result } = await moviesApi.movieDetail(id);\r\n        const {\r\n          data: { results: recommends },\r\n        } = await moviesApi.recommends(id);\r\n        const {\r\n          data: { cast: casts, crew: crews },\r\n        } = await moviesApi.credits(id);\r\n        this.setState({ result, recommends, casts, crews });\r\n      } else {\r\n        const { data: result } = await tvApi.tvDetail(id);\r\n        const {\r\n          data: { results: recommends },\r\n        } = await tvApi.recommends(id);\r\n        this.setState({ result, recommends });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"페이지 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.id !== prevProps.match.params.id) {\r\n      this.setState({\r\n        result: null,\r\n        recommends: null,\r\n        error: null,\r\n        loading: true,\r\n      });\r\n      this.render();\r\n      this.componentDidMount();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, recommends, casts, crews, error, loading } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        recommends={recommends}\r\n        casts={casts}\r\n        crews={crews}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Movie from \"Routes/Movie\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Credits from \"./Credits\";\r\nimport Videos from \"./Videos\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/movie\" exact component={Movie} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/movie/:id/credits\" component={Credits} />\r\n        <Route path=\"/movie/:id/videos\" component={Videos} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id/credits\" component={Credits} />\r\n        <Route path=\"/tv/:id/videos\" component={Videos} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n        &:hover{\r\n            text-decoration:none;\r\n            color:inherit;\r\n        }\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:#253235;\r\n        color:white;\r\n        height:100%;\r\n    }\r\n    #root{\r\n        height:100%;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n        border-radius: 5px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n        background-color: #555;\r\n        background-clip: padding-box;\r\n        border-radius: 5px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n        background-color: white;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}