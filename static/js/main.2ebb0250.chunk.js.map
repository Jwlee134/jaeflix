{"version":3,"sources":["styles/loader.js","Components/Loader.js","styles/mainScreen.js","Components/MainScreen.js","styles/section.js","Components/Section.js","styles/poster.js","Components/Poster.js","styles/message.js","Components/Message.js","api.js","store/movies.js","Routes/Movie.js","Routes/TV.js","styles/search.js","Routes/Search.js","styles/header.js","Components/Header.js","styles/basicInfo.js","Components/BasicInfo.js","Components/Credits.js","styles/video.js","Components/Videos.js","styles/detailInfo.js","Components/DetailInfo.js","styles/detail.js","Routes/Detail.js","Components/Router.js","styles/globalStyles.js","Components/App.js","store/reducers.js","store/store.js","index.js"],"names":["Container","styled","div","Loader","ThumbsContainer","Item","Title","SectionTitle","BackDrop","props","bgUrl","thumb","SectionData","FirstColumn","SecondColumn","ContentTitle","ContentData","GoDetail","SwiperCore","use","Navigation","Thumbs","MainScreen","nowPlaying","isShow","useState","thumbsSwiper","setThumbsSwiper","navigation","thumbs","swiper","loop","map","content","index","backdrop_path","name","title","first_air_date","release_date","substring","vote_average","to","id","overview","length","onSwiper","watchSlidesVisibility","watchSlidesProgress","slidesPerView","spaceBetween","breakpoints","2000","1600","1200","800","500","Section","children","isCredits","slidesPerGroup","1801","1601","1401","1201","1001","801","601","401","Img","isCompany","isContents","Text","Star","Rating","Detail","ImgContainer","span","Year","Poster","imageUrl","rating","year","isMovie","Message","text","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","moviesApi","fetchMovies","createAsyncThunk","_","rejectWithValue","a","data","results","topRated","popular","upcoming","response","movieSlice","createSlice","initialState","loading","error","reducers","extraReducers","pending","state","action","fulfilled","payload","Movie","useSelector","movies","dispatch","useDispatch","useEffect","Helmet","movie","poster_path","TV","airingToday","setTV","setLoading","setError","fetchTV","show","Form","form","Input","input","Search","movieResults","tvResults","setResults","setTerm","fetchResults","onSubmit","e","preventDefault","placeholder","value","onChange","target","SHeader","header","List","ul","li","current","SLink","Link","withRouter","pathname","location","Overview","Ul","Li","genres","runtime","date","countries","genre","includes","country","NoCredits","Credits","casts","crews","companies","crew","department","profile_path","cast","character","company","logo_path","VideoContainer","img","Name","NoVideos","Videos","videos","video","href","key","alt","src","Cover","TitleContainer","p","BasicData","Data","ItemContainer","selected","Content","Divider","SFontAwesomeIcon","FontAwesomeIcon","imgUrl","originTitle","imdbId","icon","faImdb","Backdrop","bgImg","match","push","history","result","recommends","setData","fetchData","useCallback","parsedId","parseInt","isNaN","original_title","original_name","episode_run_time","imdb_id","production_countries","production_companies","recommend","seasons","season","air_date","Router","path","exact","component","from","globalStyles","createGlobalStyle","reset","App","React","Component","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ebb0250.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin: -25px 0 0 -25px;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #fff;\r\n  animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container } from \"styles/loader\";\r\n\r\nconst Loader = () => <Container></Container>;\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ThumbsContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  margin-bottom: 10px;\r\n  padding: 0px 10px;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  height: 20%;\r\n  font-size: 17px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px;\r\n\r\n  line-height: 1.3;\r\n`;\r\n\r\nexport const SectionTitle = styled.div`\r\n  font-size: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const BackDrop = styled.div`\r\n  border-radius: 5px;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: ${(props) => (props.thumb ? \"20vh\" : \"calc(100vh - 50px);\")};\r\n  z-index: -1;\r\n  padding: 0px 70px;\r\n  padding-top: 50px;\r\n  @media screen and (max-height: 700px) {\r\n    height: ${(props) => (props.thumb ? \"25vh\" : \"calc(100vh - 50px);\")};\r\n  }\r\n`;\r\n\r\nexport const SectionData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 58vh;\r\n  align-items: flex-end;\r\n  padding: 0px 20px;\r\n  @media screen and (max-height: 800px) {\r\n    height: 55vh;\r\n  }\r\n  @media screen and (max-height: 700px) {\r\n    height: 45vh;\r\n  }\r\n  @media screen and (max-height: 600px) {\r\n    height: 40vh;\r\n  }\r\n`;\r\n\r\nexport const FirstColumn = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nexport const SecondColumn = styled.div`\r\n  width: 43%;\r\n  font-size: 25px;\r\n  line-height: 1.5;\r\n  font-weight: 400;\r\n  position: relative;\r\n`;\r\n\r\nexport const ContentTitle = styled.div`\r\n  font-size: 40px;\r\n  font-weight: 400;\r\n  margin-bottom: 20px;\r\n  line-height: 1.3;\r\n`;\r\n\r\nexport const ContentData = styled.div`\r\n  font-size: 30px;\r\n  font-weight: 200;\r\n  color: #ecf0f1;\r\n`;\r\n\r\nexport const GoDetail = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 25px;\r\n  color: white;\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  margin-top: 50px;\r\n  position: relative;\r\n  text-shadow: 0px 0px 4px rgba(0, 0, 0, 1);\r\n  .swiper-container-thumbs {\r\n    .swiper-slide {\r\n      cursor: pointer;\r\n    }\r\n    .swiper-slide-thumb-active {\r\n      border: 2px solid white;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .swiper-button-next,\r\n  .swiper-button-prev {\r\n    color: rgba(255, 255, 255, 0.8);\r\n  }\r\n  .swiper-button-disabled {\r\n    opacity: 0;\r\n  }\r\n  @media screen and (max-width: 1400px) {\r\n    ${SecondColumn} {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1200px) {\r\n    ${SecondColumn} {\r\n      font-size: 16px;\r\n    }\r\n    ${SectionData} {\r\n      padding: 0;\r\n    }\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    ${FirstColumn} {\r\n      width: 100%;\r\n    }\r\n    ${SecondColumn} {\r\n      width: 0%;\r\n      display: none;\r\n    }\r\n    ${ContentTitle} {\r\n      font-size: 30px;\r\n    }\r\n    ${ContentData} {\r\n      font-size: 20px;\r\n    }\r\n    ${GoDetail} {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    ${SectionTitle} {\r\n      justify-content: center;\r\n    }\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    ${SectionTitle} {\r\n      font-size: 40px;\r\n    }\r\n    ${ContentTitle} {\r\n      font-size: 25px;\r\n    }\r\n    ${ContentData} {\r\n      font-size: 17px;\r\n    }\r\n    ${GoDetail} {\r\n      font-size: 17px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 350px) {\r\n    ${SectionTitle} {\r\n      font-size: 30px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwiperCore, { Navigation, Thumbs } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  BackDrop,\r\n  Container,\r\n  ContentData,\r\n  ContentTitle,\r\n  FirstColumn,\r\n  GoDetail,\r\n  Item,\r\n  SecondColumn,\r\n  SectionData,\r\n  SectionTitle,\r\n  ThumbsContainer,\r\n  Title,\r\n} from \"styles/mainScreen\";\r\n\r\nSwiperCore.use([Navigation, Thumbs]);\r\n\r\nconst MainScreen = ({ nowPlaying, isShow = false }) => {\r\n  const [thumbsSwiper, setThumbsSwiper] = useState(null);\r\n  return (\r\n    <Container>\r\n      <Swiper navigation thumbs={{ swiper: thumbsSwiper }} loop={true}>\r\n        {nowPlaying.map((content, index) => (\r\n          <SwiperSlide key={index}>\r\n            <Item>\r\n              <BackDrop\r\n                thumb={false}\r\n                bgUrl={\r\n                  content.backdrop_path\r\n                    ? `https://image.tmdb.org/t/p/original${content.backdrop_path}`\r\n                    : \"/noImg.png\"\r\n                }\r\n              >\r\n                <SectionTitle>\r\n                  {isShow ? \"현재 방영중\" : \"현재 상영중\"}\r\n                </SectionTitle>\r\n                <SectionData>\r\n                  <FirstColumn>\r\n                    <ContentTitle>\r\n                      {isShow ? content.name : content.title}\r\n                    </ContentTitle>\r\n                    <ContentData>\r\n                      <span>\r\n                        {isShow && !content.first_air_date && \"연도 정보 없음\"}\r\n                        {!isShow && !content.release_date && \"연도 정보 없음\"}\r\n                        {isShow\r\n                          ? content.first_air_date.substring(0, 4)\r\n                          : content.release_date.substring(0, 4)}\r\n                      </span>\r\n                      <span> · </span>\r\n                      <span>\r\n                        {content.vote_average\r\n                          ? `평점 ${content.vote_average}`\r\n                          : \"평점 정보 없음\"}\r\n                      </span>\r\n                    </ContentData>\r\n                    <Link\r\n                      to={isShow ? `/tv/${content.id}` : `/movie/${content.id}`}\r\n                    >\r\n                      <GoDetail>상세 보기</GoDetail>\r\n                    </Link>\r\n                  </FirstColumn>\r\n                  <SecondColumn>\r\n                    {content.overview.length > 100\r\n                      ? `${content.overview.substring(0, 100)}...`\r\n                      : content.overview}\r\n                  </SecondColumn>\r\n                </SectionData>\r\n              </BackDrop>\r\n            </Item>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n      <ThumbsContainer>\r\n        <Swiper\r\n          onSwiper={setThumbsSwiper}\r\n          watchSlidesVisibility\r\n          watchSlidesProgress\r\n          slidesPerView={2}\r\n          spaceBetween={10}\r\n          loop={true}\r\n          breakpoints={{\r\n            2000: {\r\n              slidesPerView: 6,\r\n            },\r\n            1600: {\r\n              slidesPerView: 5,\r\n            },\r\n            1200: {\r\n              slidesPerView: 4,\r\n            },\r\n            800: {\r\n              slidesPerView: 3,\r\n            },\r\n            500: {\r\n              slidesPerView: 3,\r\n            },\r\n          }}\r\n        >\r\n          {nowPlaying.map((content, index) => (\r\n            <SwiperSlide key={index}>\r\n              <Item>\r\n                <BackDrop\r\n                  thumb={true}\r\n                  bgUrl={\r\n                    content.backdrop_path\r\n                      ? `https://image.tmdb.org/t/p/original${content.backdrop_path}`\r\n                      : \"/noImg.png\"\r\n                  }\r\n                ></BackDrop>\r\n                <Title>{isShow ? content.name : content.title}</Title>\r\n              </Item>\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </ThumbsContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nMainScreen.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n};\r\n\r\nexport default MainScreen;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 30px;\r\n  padding-bottom: 30px;\r\n  .swiper-wrapper {\r\n    margin-top: 20px;\r\n  }\r\n  .swiper-button-next,\r\n  .swiper-button-prev {\r\n    color: rgba(255, 255, 255, 0.8);\r\n  }\r\n  .swiper-button-disabled {\r\n    opacity: 0;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    padding: 10px 10px;\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    .swiper-button-next,\r\n    .swiper-button-prev {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 20px;\r\n  @media screen and (max-width: 500px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwiperCore, { Navigation } from \"swiper\";\r\nimport { Swiper } from \"swiper/react\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport { Container, Title } from \"styles/section\";\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nconst Section = ({ title, children, isCredits = false }) => {\r\n  return (\r\n    <>\r\n      <Title>{title}</Title>\r\n      <Container>\r\n        <Swiper\r\n          spaceBetween={30}\r\n          slidesPerView={2}\r\n          slidesPerGroup={2}\r\n          navigation\r\n          breakpoints={{\r\n            1801: { slidesPerView: isCredits ? 5 : 8, slidesPerGroup: 5 },\r\n            1601: { slidesPerView: isCredits ? 5 : 8, slidesPerGroup: 5 },\r\n            1401: { slidesPerView: isCredits ? 5 : 8, slidesPerGroup: 5 },\r\n            1201: {\r\n              slidesPerView: isCredits ? 4 : 7,\r\n              slidesPerGroup: isCredits ? 4 : 5,\r\n            },\r\n            1001: {\r\n              slidesPerView: isCredits ? 4 : 7,\r\n              slidesPerGroup: isCredits ? 4 : 5,\r\n            },\r\n            801: {\r\n              slidesPerView: isCredits ? 4 : 5,\r\n              slidesPerGroup: isCredits ? 4 : 5,\r\n            },\r\n            601: {\r\n              slidesPerView: isCredits ? 3 : 4,\r\n              slidesPerGroup: isCredits ? 3 : 4,\r\n            },\r\n            401: { slidesPerView: 3, slidesPerGroup: 3 },\r\n          }}\r\n        >\r\n          {children}\r\n        </Swiper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  isCredits: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Img = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  width: 100%;\r\n  height: 300px;\r\n  background-size: ${(props) => (props.isCompany ? \"contain\" : \"cover\")};\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border-radius: 5px;\r\n  transition: opacity 0.1s linear;\r\n  @media screen and (max-width: 2001px) {\r\n    height: 300px;\r\n  }\r\n  @media screen and (max-width: 1901px) {\r\n    height: 280px;\r\n  }\r\n  @media screen and (max-width: 1801px) {\r\n    height: 260px;\r\n  }\r\n  @media screen and (max-width: 1701px) {\r\n    height: 240px;\r\n  }\r\n  @media screen and (max-width: 1601px) {\r\n    height: 220px;\r\n  }\r\n  @media screen and (max-width: 1501px) {\r\n    height: 200px;\r\n  }\r\n  @media screen and (max-width: 1401px) {\r\n    height: 220px;\r\n  }\r\n  @media screen and (max-width: 1301px) {\r\n    height: 200px;\r\n  }\r\n  @media screen and (max-width: 1201px) {\r\n    height: 180px;\r\n  }\r\n  @media screen and (max-width: 1101px) {\r\n    height: 160px;\r\n  }\r\n  @media screen and (max-width: 1001px) {\r\n    height: 200px;\r\n  }\r\n  @media screen and (max-width: 901px) {\r\n    height: 180px;\r\n  }\r\n  @media screen and (max-width: 801px) {\r\n    height: 220px;\r\n  }\r\n  @media screen and (max-width: 701px) {\r\n    height: 200px;\r\n  }\r\n  @media screen and (max-width: 651px) {\r\n    height: 180px;\r\n  }\r\n  @media screen and (max-width: 601px) {\r\n    height: ${(props) => (props.isContents ? \"210px\" : \"160px\")};\r\n  }\r\n  @media screen and (max-width: 551px) {\r\n    height: ${(props) => (props.isContents ? \"190px\" : \"140px\")};\r\n  }\r\n  @media screen and (max-width: 501px) {\r\n    height: ${(props) => (props.isContents ? \"170px\" : \"120px\")};\r\n  }\r\n  @media screen and (max-width: 451px) {\r\n    height: ${(props) => (props.isContents ? \"150px\" : \"100px\")};\r\n  }\r\n  @media screen and (max-width: 401px) {\r\n    height: ${(props) => (props.isContents ? \"190px\" : \"140px\")};\r\n  }\r\n  @media screen and (max-width: 351px) {\r\n    height: ${(props) => (props.isContents ? \"170px\" : \"120px\")};\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Star = styled.div`\r\n  margin-bottom: 3px;\r\n  margin-right: 3px;\r\n`;\r\n\r\nexport const Rating = styled.div`\r\n  position: absolute;\r\n  bottom: 4px;\r\n  right: 7px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n  display: flex;\r\n`;\r\n\r\nexport const Detail = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nexport const ImgContainer = styled.div`\r\n  margin-bottom: 10px;\r\n  &:hover {\r\n    ${Detail} {\r\n      opacity: 1;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  position: relative;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  display: block;\r\n  padding-bottom: 5px;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const Year = styled.span`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Detail,\r\n  Img,\r\n  ImgContainer,\r\n  Rating,\r\n  Star,\r\n  Text,\r\n  Title,\r\n  Year,\r\n} from \"styles/poster\";\r\n\r\nconst Poster = ({\r\n  id,\r\n  imageUrl,\r\n  title,\r\n  rating,\r\n  year,\r\n  isMovie = false,\r\n  isCredits = false,\r\n  isCompany = false,\r\n}) =>\r\n  isCredits ? (\r\n    isCompany ? (\r\n      <Container>\r\n        <ImgContainer>\r\n          <Img\r\n            isContents={false}\r\n            isCompany={true}\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : \"/noImg.png\"\r\n            }\r\n          />\r\n        </ImgContainer>\r\n        <Title>{title}</Title>\r\n      </Container>\r\n    ) : (\r\n      <Container>\r\n        <ImgContainer>\r\n          <Img\r\n            isContents={false}\r\n            isCompany={false}\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : \"/noImg.png\"\r\n            }\r\n          />\r\n        </ImgContainer>\r\n        <Title>{title}</Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    )\r\n  ) : (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <ImgContainer>\r\n          <Img\r\n            isContents={true}\r\n            isCompany={false}\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : \"/noImg.png\"\r\n            }\r\n          />\r\n          <Detail>상세 보기</Detail>\r\n          {rating ? (\r\n            <Rating>\r\n              <Star>★</Star> <Text>{rating}/10</Text>\r\n            </Rating>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ImgContainer>\r\n        <Title>\r\n          {title.length > 18 ? `${title.substring(0, 17)}...` : title}\r\n        </Title>\r\n        <Year>{year ? year.substring(0, 4) : \"연도 정보 없음\"}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n\r\nPoster.propTypes = {\r\n  imageUrl: PropTypes.string,\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n  isCompany: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n  color: #95a5a6;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Text } from \"styles/message\";\r\n\r\nconst Message = ({ text }) => (\r\n  <Container>\r\n    <Text>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"8acfa0aece876055b4f26b6c1a000307\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  recommends: (id) => api.get(`tv/${id}/recommendations`),\r\n  credits: (id) => api.get(`tv/${id}/credits`),\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  recommends: (id) => api.get(`movie/${id}/recommendations`),\r\n  credits: (id) => api.get(`movie/${id}/credits`),\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { moviesApi } from \"api\";\r\n\r\nconst initialState = {\r\n  nowPlaying: [],\r\n  topRated: [],\r\n  upcoming: [],\r\n  popular: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchMovies = createAsyncThunk(\r\n  \"movies/fetchMovies\",\r\n  async (_, rejectWithValue) => {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: topRated },\r\n      } = await moviesApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      return { nowPlaying, topRated, popular, upcoming };\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst movieSlice = createSlice({\r\n  name: \"movie\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchMovies.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [fetchMovies.fulfilled]: (state, action) => {\r\n      const { nowPlaying, topRated, popular, upcoming } = action.payload;\r\n      state.nowPlaying = nowPlaying;\r\n      state.topRated = topRated;\r\n      state.popular = popular;\r\n      state.upcoming = upcoming;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default movieSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport \"swiper/swiper.scss\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport MainScreen from \"Components/MainScreen\";\r\nimport Section from \"Components/Section\";\r\nimport Poster from \"Components/Poster\";\r\nimport Message from \"Components/Message\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMovies } from \"store/movies\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Movie = () => {\r\n  const {\r\n    nowPlaying,\r\n    topRated,\r\n    popular,\r\n    upcoming,\r\n    error,\r\n    loading,\r\n  } = useSelector((state) => state.movies);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovies());\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>영화 | Jaeflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <MainScreen nowPlaying={nowPlaying} />\r\n          <Container>\r\n            {popular && popular.length > 0 && (\r\n              <Section title=\"인기\">\r\n                {popular.map((movie) => (\r\n                  <SwiperSlide key={movie.id}>\r\n                    <Poster\r\n                      id={movie.id}\r\n                      imageUrl={movie.poster_path}\r\n                      title={movie.title}\r\n                      year={movie.release_date}\r\n                      rating={movie.vote_average}\r\n                      isMovie={true}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {upcoming && upcoming.length > 0 && (\r\n              <Section title=\"상영 예정\">\r\n                {upcoming.map((movie) => (\r\n                  <SwiperSlide key={movie.id}>\r\n                    <Poster\r\n                      id={movie.id}\r\n                      imageUrl={movie.poster_path}\r\n                      title={movie.title}\r\n                      year={movie.release_date}\r\n                      rating={movie.vote_average}\r\n                      isMovie={true}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {topRated && topRated.length > 0 && (\r\n              <Section title=\"최고 평점\">\r\n                {topRated.map((movie) => (\r\n                  <SwiperSlide key={movie.id}>\r\n                    <Poster\r\n                      id={movie.id}\r\n                      imageUrl={movie.poster_path}\r\n                      title={movie.title}\r\n                      year={movie.release_date}\r\n                      rating={movie.vote_average}\r\n                      isMovie={true}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {error && <Message text={error} />}\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { tvApi } from \"api\";\r\nimport Loader from \"Components/Loader\";\r\nimport MainScreen from \"Components/MainScreen\";\r\nimport Section from \"Components/Section\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Poster from \"Components/Poster\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TV = () => {\r\n  const [TV, setTV] = useState({ topRated: [], airingToday: [], popular: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchTV = async () => {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      setTV({\r\n        topRated,\r\n        airingToday,\r\n        popular,\r\n      });\r\n    } catch (error) {\r\n      setError(\"페이지 정보를 찾을 수 없습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTV();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>TV | Jaeflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <MainScreen nowPlaying={TV.airingToday} isShow={true} />\r\n          <Container>\r\n            {TV.popular && TV.popular.length > 0 && (\r\n              <Section title=\"인기\">\r\n                {TV.popular.map((show) => (\r\n                  <SwiperSlide key={show.id}>\r\n                    <Poster\r\n                      id={show.id}\r\n                      imageUrl={show.poster_path}\r\n                      title={show.name}\r\n                      rating={show.vote_average}\r\n                      year={show.first_air_date}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {TV.topRated && TV.topRated.length > 0 && (\r\n              <Section title=\"최고 평점\">\r\n                {TV.topRated.map((show) => (\r\n                  <SwiperSlide key={show.id}>\r\n                    <Poster\r\n                      id={show.id}\r\n                      imageUrl={show.poster_path}\r\n                      title={show.name}\r\n                      rating={show.vote_average}\r\n                      year={show.first_air_date}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {error && <Message text={error} />}\r\n          </Container>\r\n        </>\r\n      )}\r\n      ;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TV;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0px 20px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  all: unset;\r\n  font-size: 30px;\r\n  width: 100%;\r\n`;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React, { useState } from \"react\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.scss\";\r\nimport { Container, Form, Input } from \"styles/search\";\r\n\r\nconst Search = () => {\r\n  const [results, setResults] = useState({\r\n    movieResults: null,\r\n    tvResults: null,\r\n  });\r\n  const [term, setTerm] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchResults = async (term) => {\r\n    setLoading(true);\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(term);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(term);\r\n      setResults({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch (error) {\r\n      setError(\"페이지 정보를 찾을 수 없습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateTerm = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setTerm(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (term !== \"\") {\r\n      fetchResults(term);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>검색 | Jaeflix</title>\r\n      </Helmet>\r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input\r\n            placeholder=\"영화 또는 TV 검색...\"\r\n            value={term}\r\n            onChange={updateTerm}\r\n          ></Input>\r\n        </Form>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            {results.movieResults && results.movieResults.length > 0 && (\r\n              <Section title=\"영화 검색 결과\">\r\n                {results.movieResults.map((movie) => (\r\n                  <SwiperSlide key={movie.id}>\r\n                    <Poster\r\n                      key={movie.id}\r\n                      id={movie.id}\r\n                      imageUrl={movie.poster_path}\r\n                      title={movie.title}\r\n                      rating={movie.vote_average}\r\n                      year={movie.release_date}\r\n                      isMovie={true}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {results.tvResults && results.tvResults.length > 0 && (\r\n              <Section title=\"TV 검색 결과\">\r\n                {results.tvResults.map((show) => (\r\n                  <SwiperSlide key={show.id}>\r\n                    <Poster\r\n                      key={show.id}\r\n                      id={show.id}\r\n                      imageUrl={show.poster_path}\r\n                      title={show.name}\r\n                      rating={show.vote_average}\r\n                      year={show.first_air_date}\r\n                    />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {error && <Message text={error} />}\r\n            {results.tvResults &&\r\n              results.movieResults &&\r\n              results.movieResults.length === 0 &&\r\n              results.tvResults.length === 0 && (\r\n                <Message text={\"일치하는 결과가 없습니다.\"} />\r\n              )}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nexport const SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Item, List, SHeader, SLink } from \"styles/header\";\r\n\r\nconst Header = ({ location: { pathname } }) => (\r\n  <SHeader>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">영화</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">검색</SLink>\r\n      </Item>\r\n    </List>\r\n  </SHeader>\r\n);\r\n\r\nexport default withRouter(Header);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Overview = styled.div`\r\n  margin-top: 15px;\r\n  line-height: 1.7;\r\n  opacity: 0.8;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  @media screen and (max-width: 400px) {\r\n    ${Overview},span {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  border-left: 3px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 3px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const Li = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  margin-right: 10px;\r\n  opacity: 0.6;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Container, Li, Overview, Title, Ul } from \"styles/basicInfo\";\r\n\r\nconst BasicInfo = ({\r\n  genres,\r\n  runtime,\r\n  overview,\r\n  date,\r\n  rating,\r\n  countries,\r\n  location: { pathname },\r\n}) => (\r\n  <Container>\r\n    <Ul>\r\n      <Li>\r\n        <Title>시간</Title>\r\n        <span>{runtime ? `${runtime}분` : \"등록되지 않음\"}</span>\r\n      </Li>\r\n      <Li>\r\n        <Title>장르</Title>\r\n        <span>\r\n          {genres &&\r\n            genres.length > 0 &&\r\n            genres.map((genre, index) =>\r\n              index === genres.length - 1 ? genre.name : `${genre.name} / `\r\n            )}\r\n          {genres.length === 0 && \"등록되지 않음\"}\r\n        </span>\r\n      </Li>\r\n      <Li>\r\n        <Title>{pathname.includes(\"movie\") ? \"개봉\" : \"방영\"}</Title>\r\n        <span>{date ? date : \"등록되지 않음\"}</span>\r\n      </Li>\r\n      <Li>\r\n        <Title>평점</Title>\r\n        <span>{rating ? rating : \"등록되지 않음\"}</span>\r\n      </Li>\r\n      <Li>\r\n        <Title>국가</Title>\r\n        <span>\r\n          {countries &&\r\n            countries.length > 0 &&\r\n            countries.map((country, index) =>\r\n              index === countries.length - 1\r\n                ? country.name\r\n                : `${country.name} / `\r\n            )}\r\n          {countries.length === 0 && \"등록되지 않음\"}\r\n        </span>\r\n      </Li>\r\n    </Ul>\r\n    <Overview>{overview ? overview : \"등록된 소개글이 없습니다.\"}</Overview>\r\n  </Container>\r\n);\r\n\r\nBasicInfo.propTypes = {\r\n  genres: PropTypes.array,\r\n  overview: PropTypes.string,\r\n  date: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  countries: PropTypes.array,\r\n};\r\n\r\nexport default withRouter(BasicInfo);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"./Section\";\r\nimport Poster from \"./Poster\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.scss\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst NoCredits = styled.div`\r\n  font-size: 14px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Credits = ({ casts, crews, companies }) => (\r\n  <Container>\r\n    {crews && casts && (\r\n      <>\r\n        {crews.length > 0 && (\r\n          <Section title=\"제작\" isCredits={true}>\r\n            {crews &&\r\n              crews.length > 0 &&\r\n              crews.map((crew, index) => (\r\n                <SwiperSlide key={index}>\r\n                  <Poster\r\n                    id={crew.id}\r\n                    title={crew.name}\r\n                    year={crew.department}\r\n                    isCredits={true}\r\n                    imageUrl={crew.profile_path}\r\n                  />\r\n                </SwiperSlide>\r\n              ))}\r\n          </Section>\r\n        )}\r\n        {casts.length > 0 && (\r\n          <Section title=\"출연\" isCredits={true}>\r\n            {casts &&\r\n              casts.length > 0 &&\r\n              casts.map((cast, index) => (\r\n                <SwiperSlide key={index}>\r\n                  <Poster\r\n                    id={cast.id}\r\n                    title={cast.name}\r\n                    year={cast.character}\r\n                    isCredits={true}\r\n                    imageUrl={cast.profile_path}\r\n                  />\r\n                </SwiperSlide>\r\n              ))}\r\n          </Section>\r\n        )}\r\n        {companies.length > 0 && (\r\n          <Section title=\"배급\" isCredits={true}>\r\n            {companies &&\r\n              companies.length > 0 &&\r\n              companies.map((company, index) => (\r\n                <SwiperSlide key={index}>\r\n                  <Poster\r\n                    id={company.id}\r\n                    title={company.name}\r\n                    isCredits={true}\r\n                    imageUrl={company.logo_path}\r\n                    isCompany={true}\r\n                  />\r\n                </SwiperSlide>\r\n              ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {!crews && !casts && <NoCredits>등록된 정보가 없습니다.</NoCredits>}\r\n  </Container>\r\n);\r\n\r\nCredits.propTypes = {\r\n  casts: PropTypes.array,\r\n  crews: PropTypes.array,\r\n  companies: PropTypes.array,\r\n};\r\n\r\nexport default Credits;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 30px;\r\n`;\r\n\r\nexport const VideoContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  margin: 15px 0px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.3;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const NoVideos = styled.div`\r\n  font-size: 14px;\r\n  opacity: 0.8;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Img, Name, NoVideos, VideoContainer } from \"styles/video\";\r\n\r\nconst Videos = ({ videos }) => (\r\n  <>\r\n    <Container>\r\n      {videos &&\r\n        videos.length > 0 &&\r\n        videos.map((video, index) => (\r\n          <VideoContainer key={index}>\r\n            <a\r\n              href={`https://www.youtube.com/watch?v=${video.key}`}\r\n              target=\"blank\"\r\n            >\r\n              <Img\r\n                alt={video.id}\r\n                src={`https://img.youtube.com/vi/${video.key}/0.jpg`}\r\n              />\r\n              <Name>{video.name}</Name>\r\n            </a>\r\n          </VideoContainer>\r\n        ))}\r\n    </Container>\r\n    {videos.length === 0 && <NoVideos>등록된 동영상이 없습니다.</NoVideos>}\r\n  </>\r\n);\r\n\r\nVideos.propTypes = {\r\n  videos: PropTypes.array,\r\n};\r\n\r\nexport default Videos;\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Cover = styled.img`\r\n  width: 100%;\r\n  max-height: 100%;\r\n  z-index: 1;\r\n  border-radius: 10px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  font-size: 40px;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  opacity: 0.8;\r\n  line-height: 1.8;\r\n  width: 90%;\r\n`;\r\n\r\nexport const BasicData = styled.span`\r\n  opacity: 0.8;\r\n  font-size: 15px;\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const Data = styled.div`\r\n  width: 60vw;\r\n  max-height: calc(100vh - 100px);\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const ItemContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 70%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  padding: 20px;\r\n  overflow: auto;\r\n  border-radius: 10px;\r\n  border-top-left-radius: ${(props) => (props.selected ? \"0px\" : \"10px\")};\r\n  ::-webkit-scrollbar {\r\n    width: 20px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    background-clip: padding-box;\r\n    border-radius: 20px;\r\n    border: 5px solid transparent;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  display: flex;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  font-size: 20px;\r\n  font-weight: 300;\r\n  padding: 10px;\r\n  background-color: ${(props) =>\r\n    props.selected ? \"rgba(0, 0, 0, 0.4)\" : \"none\"};\r\n  border-top-left-radius: ${(props) => (props.selected ? \"10px\" : \"none\")};\r\n  border-top-right-radius: ${(props) => (props.selected ? \"10px\" : \"none\")};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 8fr;\r\n  width: 100%;\r\n  height: calc(100vh - 100px);\r\n  margin-bottom: 50px;\r\n  @media screen and (max-width: 1000px) {\r\n    grid-template-columns: none;\r\n    grid-template-rows: auto auto;\r\n    height: auto;\r\n    ${Cover} {\r\n      width: 180px;\r\n    }\r\n    ${Data} {\r\n      justify-self: center;\r\n      text-align: center;\r\n      margin-left: 0;\r\n      width: 100%;\r\n      max-width: 85vw;\r\n      margin: 20px 0px;\r\n    }\r\n    ${Overview} {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n    ${ItemContainer} {\r\n      text-align: left;\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    ${Title} {\r\n      font-size: 30px;\r\n    }\r\n    ${Data} {\r\n      max-width: 75vw;\r\n    }\r\n    ${Li} {\r\n      font-size: 17px;\r\n    }\r\n    ${ItemContainer} {\r\n      ::-webkit-scrollbar {\r\n        width: 0;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    ${Overview} {\r\n      font-size: 10px;\r\n      width: 100%;\r\n    }\r\n    ${Li} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.span`\r\n  margin: 0px 10px;\r\n  opacity: 0.8;\r\n  font-weight: 200;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const SFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  font-size: 18px;\r\n  margin-left: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport Credits from \"./Credits\";\r\nimport Videos from \"./Videos\";\r\nimport { faImdb } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  BasicData,\r\n  Content,\r\n  Cover,\r\n  Data,\r\n  Divider,\r\n  ItemContainer,\r\n  Li,\r\n  SFontAwesomeIcon,\r\n  Title,\r\n  TitleContainer,\r\n  Ul,\r\n} from \"styles/detailInfo\";\r\n\r\nconst DetailInfo = ({\r\n  id,\r\n  imgUrl,\r\n  title,\r\n  originTitle,\r\n  date,\r\n  runtime,\r\n  genres,\r\n  overview,\r\n  rating,\r\n  casts,\r\n  crews,\r\n  videos,\r\n  imdbId,\r\n  countries,\r\n  companies,\r\n  location: { pathname },\r\n}) => {\r\n  const isMovie = pathname.includes(\"/movie/\");\r\n  return (\r\n    <Content>\r\n      <Cover\r\n        src={imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : \"/noImg.png\"}\r\n      />\r\n      <Data>\r\n        <TitleContainer>\r\n          <Title>{title}</Title>\r\n          {imdbId && (\r\n            <a href={`https://www.imdb.com/title/${imdbId}`} target=\"blank\">\r\n              <SFontAwesomeIcon icon={faImdb} />\r\n            </a>\r\n          )}\r\n        </TitleContainer>\r\n        <BasicData>\r\n          {pathname.includes(\"/movie/\") ? \"영화\" : \"TV 프로그램\"}\r\n        </BasicData>\r\n        <Divider>|</Divider>\r\n        <BasicData>{originTitle}</BasicData>\r\n        <Divider>|</Divider>\r\n        <BasicData>{date ? date.substring(0, 4) : \"연도 정보 없음\"}</BasicData>\r\n        <Ul>\r\n          <Li\r\n            selected={pathname === `/movie/${id}` || pathname === `/tv/${id}`}\r\n          >\r\n            <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>기본 정보</Link>\r\n          </Li>\r\n          <Li selected={pathname.includes(\"credits\")}>\r\n            <Link to={isMovie ? `/movie/${id}/credits` : `/tv/${id}/credits`}>\r\n              참여\r\n            </Link>\r\n          </Li>\r\n          <Li selected={pathname.includes(\"videos\")}>\r\n            <Link to={isMovie ? `/movie/${id}/videos` : `/tv/${id}/videos`}>\r\n              동영상\r\n            </Link>\r\n          </Li>\r\n        </Ul>\r\n        <ItemContainer\r\n          selected={pathname === `/movie/${id}` || pathname === `/tv/${id}`}\r\n        >\r\n          {pathname === `/movie/${id}` || pathname === `/tv/${id}` ? (\r\n            <BasicInfo\r\n              genres={genres}\r\n              runtime={runtime}\r\n              overview={overview}\r\n              date={date}\r\n              rating={rating}\r\n              countries={countries}\r\n            />\r\n          ) : pathname.includes(\"credits\") ? (\r\n            <Credits casts={casts} crews={crews} companies={companies} />\r\n          ) : pathname.includes(\"videos\") ? (\r\n            <Videos videos={videos} />\r\n          ) : null}\r\n        </ItemContainer>\r\n      </Data>\r\n    </Content>\r\n  );\r\n};\r\n\r\nDetailInfo.propTypes = {\r\n  id: PropTypes.number,\r\n  imgUrl: PropTypes.string,\r\n  title: PropTypes.string,\r\n  originTitle: PropTypes.string,\r\n  date: PropTypes.string,\r\n  genres: PropTypes.array,\r\n  overview: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  casts: PropTypes.array,\r\n  crews: PropTypes.array,\r\n  imdbId: PropTypes.string,\r\n  countries: PropTypes.array,\r\n  companies: PropTypes.array,\r\n};\r\n\r\nexport default withRouter(DetailInfo);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 30px;\r\n  padding-top: 100px;\r\n  @media screen and (max-width: 400px) {\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n  }\r\n  span {\r\n    line-height: 1.2;\r\n  }\r\n`;\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n  margin-top: 50px;\r\n`;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\nimport Section from \"Components/Section\";\r\nimport Poster from \"Components/Poster\";\r\nimport DetailInfo from \"Components/DetailInfo\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.scss\";\r\nimport { Backdrop, Container } from \"styles/detail\";\r\n\r\nconst Detail = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n  history: { push },\r\n  location: { pathname },\r\n}) => {\r\n  const [data, setData] = useState({\r\n    result: null,\r\n    recommends: null,\r\n    casts: null,\r\n    crews: null,\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const isMovie = pathname.includes(\"/movie/\");\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    try {\r\n      if (isMovie) {\r\n        const { data: result } = await moviesApi.movieDetail(id);\r\n        const {\r\n          data: { results: recommends },\r\n        } = await moviesApi.recommends(id);\r\n        const {\r\n          data: { cast: casts, crew: crews },\r\n        } = await moviesApi.credits(id);\r\n        setData({ result, recommends, casts, crews });\r\n      } else {\r\n        const { data: result } = await tvApi.tvDetail(id);\r\n        const {\r\n          data: { cast: casts, crew: crews },\r\n        } = await tvApi.credits(id);\r\n        const {\r\n          data: { results: recommends },\r\n        } = await tvApi.recommends(id);\r\n        setData({ result, recommends, casts, crews });\r\n      }\r\n    } catch (error) {\r\n      setError(\"페이지 정보를 찾을 수 없습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [id, isMovie, push]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    return () => setLoading(true);\r\n  }, [fetchData]);\r\n\r\n  return loading ? (\r\n    <>\r\n      <Loader />\r\n      <Helmet>\r\n        <title>로딩중 | Jaeflix</title>\r\n      </Helmet>\r\n    </>\r\n  ) : error ? (\r\n    <Message text=\"결과가 없습니다.\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {data.result.title ? data.result.title : data.result.name} | Jaeflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImg={`https://image.tmdb.org/t/p/original${data.result.backdrop_path}`}\r\n      />\r\n      <DetailInfo\r\n        id={data.result.id}\r\n        imgUrl={data.result.poster_path}\r\n        title={isMovie ? data.result.title : data.result.name}\r\n        originTitle={\r\n          isMovie ? data.result.original_title : data.result.original_name\r\n        }\r\n        date={isMovie ? data.result.release_date : data.result.first_air_date}\r\n        runtime={isMovie ? data.result.runtime : data.result.episode_run_time}\r\n        genres={data.result.genres}\r\n        overview={data.result.overview}\r\n        rating={data.result.vote_average}\r\n        casts={data.casts}\r\n        crews={data.crews}\r\n        videos={data.result.videos.results}\r\n        imdbId={data.result.imdb_id}\r\n        countries={data.result.production_countries}\r\n        companies={data.result.production_companies}\r\n      />\r\n      {data.recommends &&\r\n        data.recommends.length > 0 &&\r\n        (isMovie ? (\r\n          <Section title=\"관련 영화 추천\">\r\n            {data.recommends.map((recommend, index) => (\r\n              <SwiperSlide key={index}>\r\n                <Poster\r\n                  id={recommend.id}\r\n                  imageUrl={recommend.poster_path}\r\n                  title={recommend.title}\r\n                  year={recommend.release_date}\r\n                  rating={recommend.vote_average}\r\n                  isMovie={true}\r\n                />\r\n              </SwiperSlide>\r\n            ))}\r\n          </Section>\r\n        ) : (\r\n          <Section title=\"관련 TV 프로그램 추천\">\r\n            {data.recommends.map((recommend, index) => (\r\n              <SwiperSlide key={index}>\r\n                <Poster\r\n                  id={recommend.id}\r\n                  imageUrl={recommend.poster_path}\r\n                  title={recommend.name}\r\n                  rating={recommend.vote_average}\r\n                  year={recommend.first_air_date}\r\n                />\r\n              </SwiperSlide>\r\n            ))}\r\n          </Section>\r\n        ))}\r\n      {data.result.seasons && data.result.seasons.length > 0 && (\r\n        <Section title=\"시즌 정보\">\r\n          {data.result.seasons.map((season, index) => (\r\n            <SwiperSlide key={index}>\r\n              <Poster\r\n                id={season.id}\r\n                imageUrl={season.poster_path}\r\n                title={season.name}\r\n                year={season.air_date}\r\n                rating={null}\r\n              />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Section>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Movie from \"Routes/Movie\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Credits from \"./Credits\";\r\nimport Videos from \"./Videos\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Movie} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/movie/:id/credits\" component={Credits} />\r\n        <Route path=\"/movie/:id/videos\" component={Videos} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id/credits\" component={Credits} />\r\n        <Route path=\"/tv/:id/videos\" component={Videos} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n        &:hover{\r\n            text-decoration:none;\r\n            color:inherit;\r\n        }\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:#253235;\r\n        color:white;\r\n        height:100%;\r\n    }\r\n    #root{\r\n        height:100%;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"styles/globalStyles\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport movies from \"./movies\";\r\n\r\nconst rootReducer = combineReducers({\r\n  movies,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}